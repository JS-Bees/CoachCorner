datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator nexus {
  provider = "nexus-prisma"
}

model Coach {  
  id                  Int               @id @default(autoincrement()) 
  address             String   
  birthday            DateTime 
  email               String            @unique
  firstName           String            @map("first_name")
  lastName            String            @map("last_name")
  password            String   
  profilePicture      String            @map("profile_picture")
  mantra              String
  bio                 String
  coachingRole        Boolean           @map("coaching_role")

  interests           CoachInterest[]
  tasks               CoachTask[]
  reviews             Review[]
  bookings            Booking[]
  contacts            Contact[]
  sports              Sport[]

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("coachs")
}

model Coachee {  
  id                  Int               @id @default(autoincrement()) 
  address             String   
  birthday            DateTime 
  email               String            @unique
  firstName           String            @map("first_name")
  lastName            String            @map("last_name")
  password            String   
  profilePicture      String            @map("profile_picture")
  mantra              String
  bio                 String
  coachingRole        Boolean           @map("coaching_role")

  interests           CoacheeInterest[]
  tasks               CoacheeTask[]
  reviews             Review[]
  bookings            Booking[]
  contacts            Contact[]

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("coachees")
}

model Sport {
  id                  Int               @id @default(autoincrement()) 
  coach               Coach             @relation(fields: [coachId], references: [id]) 
  coachId             Int               @map("coach_id")
  type                String
  sportsCredentials   SportsCredential[]  

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("sports")
}

model SportsCredential {
  id                  Int               @id @default(autoincrement())
  sport               Sport             @relation(fields: [sportId], references: [id])
  sportId             Int               @map("sport_id") 
  credentialPicture   String            @map("credential_picture")

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("sports_credentials")
}

model CoachInterest {
  id                  Int               @id @default(autoincrement()) 
  coach               Coach             @relation(fields: [coachId], references: [id])
  coachId             Int               @map("coach_id")

  type                String
  name                String

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("coach_interests")
}

model CoacheeInterest {
  id                  Int               @id @default(autoincrement()) 
  coachee             Coachee           @relation(fields: [coacheeId], references: [id])
  coacheeId           Int               @map("coachee_id")

  type                String
  name                String

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("coachee_interests")
}


model CoachTask {
  id                  Int               @id @default(autoincrement()) 
  coach               Coach             @relation(fields: [coachId], references: [id])
  coachId             Int               @map("coach_id")
  
  title               String
  description         String
  completionStatus    String            @map("completion_status")
  date                DateTime

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("coach_tasks")
}

model CoacheeTask {
  id                  Int               @id @default(autoincrement()) 
  coachee             Coachee           @relation(fields: [coacheeId], references: [id])
  coacheeId           Int               @map("coachee_id")
  
  title               String
  description         String
  completionStatus    String            @map("completion_status")
  date                DateTime

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("coachee_tasks")
}


model Review {
  id                  Int               @id @default(autoincrement())
  coach               Coach             @relation(fields: [coachId], references: [id])
  coachee             Coachee           @relation(fields: [coacheeId], references: [id]) 
  coachId             Int               @map("coach_id")
  coacheeId           Int               @map("coachee_id")
  starRating          Int               @map("star_rating")
  comment             String
  
  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("reviews")
}

model Booking {
  id                  Int               @id @default(autoincrement())
  coach               Coach             @relation(fields: [coachId], references: [id])
  coachee             Coachee           @relation(fields: [coacheeId], references: [id]) 
  coachId             Int               @map("coach_id")
  coacheeId           Int               @map("coachee_id")
  serviceType         String            @map("service_type")
  additionalNotes     String            @map("additional_notes")
  status              String            

  bookingSlots        BookingSlot[]     

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("bookings")
}

model BookingSlot {
  id                  Int               @id @default(autoincrement())
  booking             Booking           @relation(fields: [bookingId], references: [id]) 
  bookingId           Int               @map("booking_id")
  date                DateTime 
  startTime           DateTime          @map("start_time")
  endTime             DateTime          @map("end_time")
  status              String    

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("booking_slots")
}

model Contact {
  id                  Int               @id @default(autoincrement())
  coach               Coach             @relation(fields: [coachId], references: [id])
  coachee             Coachee           @relation(fields: [coacheeId], references: [id]) 
  coachId             Int               @map("coach_id")
  coacheeId           Int               @map("coachee_id")
  contactedStatus     Boolean           @map("contacted_status")

  messages            Message[]

  active              Boolean       @default(true)
  createdAt           DateTime      @default(now())   @map("created_at")
  updatedAt           DateTime      @updatedAt        @map("updated_at")

  @@map("contacts")
}

model Message {
  id                  Int               @id @default(autoincrement())
  contact             Contact           @relation(fields: [contactId], references: [id]) 
  contactId           Int               @map("contact_id")
  content             String

  createdAt           DateTime      @default(now())   @map("created_at")

  @@map("messages")
}
